/*
* generated by Xtext
*/
grammar InternalStateMachineDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package hu.bme.mit.inf.gomrp.statemachine.dsl.text.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package hu.bme.mit.inf.gomrp.statemachine.dsl.text.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import hu.bme.mit.inf.gomrp.statemachine.dsl.text.services.StateMachineDSLGrammarAccess;

}

@parser::members {

 	private StateMachineDSLGrammarAccess grammarAccess;
 	
    public InternalStateMachineDSLParser(TokenStream input, StateMachineDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "StateMachineBehavioralModel";	
   	}
   	
   	@Override
   	protected StateMachineDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleStateMachineBehavioralModel
entryRuleStateMachineBehavioralModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMachineBehavioralModelRule()); }
	 iv_ruleStateMachineBehavioralModel=ruleStateMachineBehavioralModel 
	 { $current=$iv_ruleStateMachineBehavioralModel.current; } 
	 EOF 
;

// Rule StateMachineBehavioralModel
ruleStateMachineBehavioralModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateMachineBehavioralModelAccess().getStateMachineBehavioralModelAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineBehavioralModelAccess().getIncludesIncludeParserRuleCall_1_0_0()); 
	    }
		lv_includes_1_0=ruleInclude		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineBehavioralModelRule());
	        }
       		add(
       			$current, 
       			"includes",
        		lv_includes_1_0, 
        		"Include");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineBehavioralModelAccess().getStatemachinesStateMachineParserRuleCall_1_1_0()); 
	    }
		lv_statemachines_2_0=ruleStateMachine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineBehavioralModelRule());
	        }
       		add(
       			$current, 
       			"statemachines",
        		lv_statemachines_2_0, 
        		"StateMachine");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineBehavioralModelAccess().getStatemachinesStateMachineParserRuleCall_1_2_0()); 
	    }
		lv_statemachines_3_0=ruleStateMachine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineBehavioralModelRule());
	        }
       		add(
       			$current, 
       			"statemachines",
        		lv_statemachines_3_0, 
        		"StateMachine");
	        afterParserOrEnumRuleCall();
	    }

)
)*))
;





// Entry rule entryRuleInclude
entryRuleInclude returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncludeRule()); }
	 iv_ruleInclude=ruleInclude 
	 { $current=$iv_ruleInclude.current; } 
	 EOF 
;

// Rule Include
ruleInclude returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIncludeAccess().getIncludeKeyword_0());
    }
(
(
		lv_filename_1_0=RULE_STRING
		{
			newLeafNode(lv_filename_1_0, grammarAccess.getIncludeAccess().getFilenameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"filename",
        		lv_filename_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleStateMachine
entryRuleStateMachine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMachineRule()); }
	 iv_ruleStateMachine=ruleStateMachine 
	 { $current=$iv_ruleStateMachine.current; } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='StateMachine' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStateMachineAccess().getStateMachineKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for object' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStateMachineAccess().getForObjectKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getStateMachineAccess().getReferredObjectRDMElementCrossReference_3_0()); 
	}

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_4());
    }
(	otherlv_5='Actions:' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateMachineAccess().getActionsKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getActionsActionParserRuleCall_5_1_0()); 
	    }
		lv_actions_6_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_6_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='EndActions' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateMachineAccess().getEndActionsKeyword_5_2());
    }
)?(	otherlv_8='Guards:' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStateMachineAccess().getGuardsKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getGuardsGuardParserRuleCall_6_1_0()); 
	    }
		lv_guards_9_0=ruleGuard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"guards",
        		lv_guards_9_0, 
        		"Guard");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='EndGuards' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStateMachineAccess().getEndGuardsKeyword_6_2());
    }
)?(	otherlv_11='Triggers:' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStateMachineAccess().getTriggersKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getTriggersTriggerParserRuleCall_7_1_0()); 
	    }
		lv_triggers_12_0=ruleTrigger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"triggers",
        		lv_triggers_12_0, 
        		"Trigger");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='EndTriggers' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStateMachineAccess().getEndTriggersKeyword_7_2());
    }
)?(	otherlv_14='States:' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getStateMachineAccess().getStatesKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_8_1_0()); 
	    }
		lv_states_15_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_15_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_16='EndStates' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getStateMachineAccess().getEndStatesKeyword_8_2());
    }
)?(	otherlv_17='Transitions:' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getStateMachineAccess().getTransitionsKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_9_1_0()); 
	    }
		lv_transitions_18_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_18_0, 
        		"Transition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_19='EndTransitions' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getStateMachineAccess().getEndTransitionsKeyword_9_2());
    }
)?	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getActionAccess().getChangeTrainHeadingSpeedParserRuleCall_0()); 
    }
    this_ChangeTrainHeadingSpeed_0=ruleChangeTrainHeadingSpeed
    { 
        $current = $this_ChangeTrainHeadingSpeed_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActionAccess().getChangeSignalAllowedSpeedParserRuleCall_1()); 
    }
    this_ChangeSignalAllowedSpeed_1=ruleChangeSignalAllowedSpeed
    { 
        $current = $this_ChangeSignalAllowedSpeed_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActionAccess().getChangeTurnoutDirectionParserRuleCall_2()); 
    }
    this_ChangeTurnoutDirection_2=ruleChangeTurnoutDirection
    { 
        $current = $this_ChangeTurnoutDirection_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActionAccess().getChangeTrainCurrentTrackElementParserRuleCall_3()); 
    }
    this_ChangeTrainCurrentTrackElement_3=ruleChangeTrainCurrentTrackElement
    { 
        $current = $this_ChangeTrainCurrentTrackElement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActionAccess().getActionExpression_ImplParserRuleCall_4()); 
    }
    this_ActionExpression_Impl_4=ruleActionExpression_Impl
    { 
        $current = $this_ActionExpression_Impl_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleActionExpression_Impl
entryRuleActionExpression_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionExpression_ImplRule()); }
	 iv_ruleActionExpression_Impl=ruleActionExpression_Impl 
	 { $current=$iv_ruleActionExpression_Impl.current; } 
	 EOF 
;

// Rule ActionExpression_Impl
ruleActionExpression_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ActionExpression' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActionExpression_ImplAccess().getActionExpressionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getActionExpression_ImplAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionExpression_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActionExpression_ImplAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionExpression_ImplAccess().getExpressionEStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionExpression_ImplRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActionExpression_ImplAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleChangeTrainCurrentTrackElement
entryRuleChangeTrainCurrentTrackElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChangeTrainCurrentTrackElementRule()); }
	 iv_ruleChangeTrainCurrentTrackElement=ruleChangeTrainCurrentTrackElement 
	 { $current=$iv_ruleChangeTrainCurrentTrackElement.current; } 
	 EOF 
;

// Rule ChangeTrainCurrentTrackElement
ruleChangeTrainCurrentTrackElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ChangeTrainCurrentTrackElement' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChangeTrainCurrentTrackElementAccess().getChangeTrainCurrentTrackElementKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChangeTrainCurrentTrackElementAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChangeTrainCurrentTrackElementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleChangeTurnoutDirection
entryRuleChangeTurnoutDirection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChangeTurnoutDirectionRule()); }
	 iv_ruleChangeTurnoutDirection=ruleChangeTurnoutDirection 
	 { $current=$iv_ruleChangeTurnoutDirection.current; } 
	 EOF 
;

// Rule ChangeTurnoutDirection
ruleChangeTurnoutDirection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ChangeTurnoutDirection' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChangeTurnoutDirectionAccess().getChangeTurnoutDirectionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChangeTurnoutDirectionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChangeTurnoutDirectionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleChangeSignalAllowedSpeed
entryRuleChangeSignalAllowedSpeed returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChangeSignalAllowedSpeedRule()); }
	 iv_ruleChangeSignalAllowedSpeed=ruleChangeSignalAllowedSpeed 
	 { $current=$iv_ruleChangeSignalAllowedSpeed.current; } 
	 EOF 
;

// Rule ChangeSignalAllowedSpeed
ruleChangeSignalAllowedSpeed returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ChangeSignalAllowedSpeed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChangeSignalAllowedSpeedAccess().getChangeSignalAllowedSpeedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChangeSignalAllowedSpeedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChangeSignalAllowedSpeedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleChangeTrainHeadingSpeed
entryRuleChangeTrainHeadingSpeed returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChangeTrainHeadingSpeedRule()); }
	 iv_ruleChangeTrainHeadingSpeed=ruleChangeTrainHeadingSpeed 
	 { $current=$iv_ruleChangeTrainHeadingSpeed.current; } 
	 EOF 
;

// Rule ChangeTrainHeadingSpeed
ruleChangeTrainHeadingSpeed returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ChangeTrainHeadingSpeed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChangeTrainHeadingSpeedAccess().getChangeTrainHeadingSpeedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChangeTrainHeadingSpeedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChangeTrainHeadingSpeedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	 iv_ruleTrigger=ruleTrigger 
	 { $current=$iv_ruleTrigger.current; } 
	 EOF 
;

// Rule Trigger
ruleTrigger returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTriggerAccess().getTrainHeadingSpeedChangedParserRuleCall_0()); 
    }
    this_TrainHeadingSpeedChanged_0=ruleTrainHeadingSpeedChanged
    { 
        $current = $this_TrainHeadingSpeedChanged_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTriggerAccess().getTrainTrackElementChangedParserRuleCall_1()); 
    }
    this_TrainTrackElementChanged_1=ruleTrainTrackElementChanged
    { 
        $current = $this_TrainTrackElementChanged_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTriggerAccess().getSignalAllowedSpeedChangedParserRuleCall_2()); 
    }
    this_SignalAllowedSpeedChanged_2=ruleSignalAllowedSpeedChanged
    { 
        $current = $this_SignalAllowedSpeedChanged_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTriggerAccess().getTurnoutDirectionChangedParserRuleCall_3()); 
    }
    this_TurnoutDirectionChanged_3=ruleTurnoutDirectionChanged
    { 
        $current = $this_TurnoutDirectionChanged_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTriggerAccess().getTriggerExpression_ImplParserRuleCall_4()); 
    }
    this_TriggerExpression_Impl_4=ruleTriggerExpression_Impl
    { 
        $current = $this_TriggerExpression_Impl_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTrainHeadingSpeedChanged
entryRuleTrainHeadingSpeedChanged returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTrainHeadingSpeedChangedRule()); }
	 iv_ruleTrainHeadingSpeedChanged=ruleTrainHeadingSpeedChanged 
	 { $current=$iv_ruleTrainHeadingSpeedChanged.current; } 
	 EOF 
;

// Rule TrainHeadingSpeedChanged
ruleTrainHeadingSpeedChanged returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TrainHeadingSpeedChanged' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTrainHeadingSpeedChangedAccess().getTrainHeadingSpeedChangedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTrainHeadingSpeedChangedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTrainHeadingSpeedChangedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTrainTrackElementChanged
entryRuleTrainTrackElementChanged returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTrainTrackElementChangedRule()); }
	 iv_ruleTrainTrackElementChanged=ruleTrainTrackElementChanged 
	 { $current=$iv_ruleTrainTrackElementChanged.current; } 
	 EOF 
;

// Rule TrainTrackElementChanged
ruleTrainTrackElementChanged returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TrainTrackElementChanged' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTrainTrackElementChangedAccess().getTrainTrackElementChangedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTrainTrackElementChangedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTrainTrackElementChangedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSignalAllowedSpeedChanged
entryRuleSignalAllowedSpeedChanged returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignalAllowedSpeedChangedRule()); }
	 iv_ruleSignalAllowedSpeedChanged=ruleSignalAllowedSpeedChanged 
	 { $current=$iv_ruleSignalAllowedSpeedChanged.current; } 
	 EOF 
;

// Rule SignalAllowedSpeedChanged
ruleSignalAllowedSpeedChanged returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SignalAllowedSpeedChanged' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSignalAllowedSpeedChangedAccess().getSignalAllowedSpeedChangedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalAllowedSpeedChangedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalAllowedSpeedChangedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTurnoutDirectionChanged
entryRuleTurnoutDirectionChanged returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTurnoutDirectionChangedRule()); }
	 iv_ruleTurnoutDirectionChanged=ruleTurnoutDirectionChanged 
	 { $current=$iv_ruleTurnoutDirectionChanged.current; } 
	 EOF 
;

// Rule TurnoutDirectionChanged
ruleTurnoutDirectionChanged returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TurnoutDirectionChanged' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTurnoutDirectionChangedAccess().getTurnoutDirectionChangedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTurnoutDirectionChangedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTurnoutDirectionChangedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTriggerExpression_Impl
entryRuleTriggerExpression_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTriggerExpression_ImplRule()); }
	 iv_ruleTriggerExpression_Impl=ruleTriggerExpression_Impl 
	 { $current=$iv_ruleTriggerExpression_Impl.current; } 
	 EOF 
;

// Rule TriggerExpression_Impl
ruleTriggerExpression_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TriggerExpression' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTriggerExpression_ImplAccess().getTriggerExpressionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTriggerExpression_ImplAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTriggerExpression_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTriggerExpression_ImplAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggerExpression_ImplAccess().getExpressionEStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggerExpression_ImplRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTriggerExpression_ImplAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleGuard
entryRuleGuard returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGuardRule()); }
	 iv_ruleGuard=ruleGuard 
	 { $current=$iv_ruleGuard.current; } 
	 EOF 
;

// Rule Guard
ruleGuard returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGuardAccess().getTrainCurrentHeadingSpeedParserRuleCall_0()); 
    }
    this_TrainCurrentHeadingSpeed_0=ruleTrainCurrentHeadingSpeed
    { 
        $current = $this_TrainCurrentHeadingSpeed_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGuardAccess().getTrainCurrentlyStandsOnParserRuleCall_1()); 
    }
    this_TrainCurrentlyStandsOn_1=ruleTrainCurrentlyStandsOn
    { 
        $current = $this_TrainCurrentlyStandsOn_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGuardAccess().getTurnoutCurrentDirectionParserRuleCall_2()); 
    }
    this_TurnoutCurrentDirection_2=ruleTurnoutCurrentDirection
    { 
        $current = $this_TurnoutCurrentDirection_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGuardAccess().getSignalCurrentAllowedSpeedParserRuleCall_3()); 
    }
    this_SignalCurrentAllowedSpeed_3=ruleSignalCurrentAllowedSpeed
    { 
        $current = $this_SignalCurrentAllowedSpeed_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGuardAccess().getNextTrackElementIsParserRuleCall_4()); 
    }
    this_NextTrackElementIs_4=ruleNextTrackElementIs
    { 
        $current = $this_NextTrackElementIs_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGuardAccess().getTurnoutHasDesiredDirectionParserRuleCall_5()); 
    }
    this_TurnoutHasDesiredDirection_5=ruleTurnoutHasDesiredDirection
    { 
        $current = $this_TurnoutHasDesiredDirection_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGuardAccess().getGuardExpression_ImplParserRuleCall_6()); 
    }
    this_GuardExpression_Impl_6=ruleGuardExpression_Impl
    { 
        $current = $this_GuardExpression_Impl_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTrainCurrentHeadingSpeed
entryRuleTrainCurrentHeadingSpeed returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTrainCurrentHeadingSpeedRule()); }
	 iv_ruleTrainCurrentHeadingSpeed=ruleTrainCurrentHeadingSpeed 
	 { $current=$iv_ruleTrainCurrentHeadingSpeed.current; } 
	 EOF 
;

// Rule TrainCurrentHeadingSpeed
ruleTrainCurrentHeadingSpeed returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TrainCurrentHeadingSpeed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTrainCurrentHeadingSpeedAccess().getTrainCurrentHeadingSpeedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTrainCurrentHeadingSpeedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTrainCurrentHeadingSpeedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTrainCurrentlyStandsOn
entryRuleTrainCurrentlyStandsOn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTrainCurrentlyStandsOnRule()); }
	 iv_ruleTrainCurrentlyStandsOn=ruleTrainCurrentlyStandsOn 
	 { $current=$iv_ruleTrainCurrentlyStandsOn.current; } 
	 EOF 
;

// Rule TrainCurrentlyStandsOn
ruleTrainCurrentlyStandsOn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TrainCurrentlyStandsOn' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTrainCurrentlyStandsOnAccess().getTrainCurrentlyStandsOnKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTrainCurrentlyStandsOnAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTrainCurrentlyStandsOnRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTurnoutCurrentDirection
entryRuleTurnoutCurrentDirection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTurnoutCurrentDirectionRule()); }
	 iv_ruleTurnoutCurrentDirection=ruleTurnoutCurrentDirection 
	 { $current=$iv_ruleTurnoutCurrentDirection.current; } 
	 EOF 
;

// Rule TurnoutCurrentDirection
ruleTurnoutCurrentDirection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TurnoutCurrentDirection' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTurnoutCurrentDirectionAccess().getTurnoutCurrentDirectionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTurnoutCurrentDirectionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTurnoutCurrentDirectionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSignalCurrentAllowedSpeed
entryRuleSignalCurrentAllowedSpeed returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignalCurrentAllowedSpeedRule()); }
	 iv_ruleSignalCurrentAllowedSpeed=ruleSignalCurrentAllowedSpeed 
	 { $current=$iv_ruleSignalCurrentAllowedSpeed.current; } 
	 EOF 
;

// Rule SignalCurrentAllowedSpeed
ruleSignalCurrentAllowedSpeed returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SignalCurrentAllowedSpeed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSignalCurrentAllowedSpeedAccess().getSignalCurrentAllowedSpeedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalCurrentAllowedSpeedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalCurrentAllowedSpeedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNextTrackElementIs
entryRuleNextTrackElementIs returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNextTrackElementIsRule()); }
	 iv_ruleNextTrackElementIs=ruleNextTrackElementIs 
	 { $current=$iv_ruleNextTrackElementIs.current; } 
	 EOF 
;

// Rule NextTrackElementIs
ruleNextTrackElementIs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='NextTrackElementIs' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNextTrackElementIsAccess().getNextTrackElementIsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNextTrackElementIsAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNextTrackElementIsRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTurnoutHasDesiredDirection
entryRuleTurnoutHasDesiredDirection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTurnoutHasDesiredDirectionRule()); }
	 iv_ruleTurnoutHasDesiredDirection=ruleTurnoutHasDesiredDirection 
	 { $current=$iv_ruleTurnoutHasDesiredDirection.current; } 
	 EOF 
;

// Rule TurnoutHasDesiredDirection
ruleTurnoutHasDesiredDirection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TurnoutHasDesiredDirection' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTurnoutHasDesiredDirectionAccess().getTurnoutHasDesiredDirectionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTurnoutHasDesiredDirectionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTurnoutHasDesiredDirectionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleGuardExpression_Impl
entryRuleGuardExpression_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGuardExpression_ImplRule()); }
	 iv_ruleGuardExpression_Impl=ruleGuardExpression_Impl 
	 { $current=$iv_ruleGuardExpression_Impl.current; } 
	 EOF 
;

// Rule GuardExpression_Impl
ruleGuardExpression_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='GuardExpression' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGuardExpression_ImplAccess().getGuardExpressionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGuardExpression_ImplAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGuardExpression_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGuardExpression_ImplAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardExpression_ImplAccess().getExpressionEStringParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardExpression_ImplRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGuardExpression_ImplAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleState
entryRuleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	 iv_ruleState=ruleState 
	 { $current=$iv_ruleState.current; } 
	 EOF 
;

// Rule State
ruleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getStateAccess().getUnorderedGroup_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStateAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStateAccess().getUnorderedGroup_1(), 0);
	 				}
					({true}?=>(
(
		lv_isInitial_2_0=	'is Initial' 
    {
        newLeafNode(lv_isInitial_2_0, grammarAccess.getStateAccess().getIsInitialIsInitialKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed($current, "isInitial", true, "is Initial");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStateAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStateAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStateAccess().getUnorderedGroup_1(), 1);
	 				}
					({true}?=>(
(
		lv_isActive_3_0=	'is Active' 
    {
        newLeafNode(lv_isActive_3_0, grammarAccess.getStateAccess().getIsActiveIsActiveKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed($current, "isActive", true, "is Active");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStateAccess().getUnorderedGroup_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getStateAccess().getUnorderedGroup_1());
	}

))
;





// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	 iv_ruleTransition=ruleTransition 
	 { $current=$iv_ruleTransition.current; } 
	 EOF 
;

// Rule Transition
ruleTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_1());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTransitionAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(
(
		lv_isEnabled_3_0=	'is Enabled' 
    {
        newLeafNode(lv_isEnabled_3_0, grammarAccess.getTransitionAccess().getIsEnabledIsEnabledKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
       		setWithLastConsumed($current, "isEnabled", true, "is Enabled");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(
(
		lv_isFireable_4_0=	'is Fireable' 
    {
        newLeafNode(lv_isFireable_4_0, grammarAccess.getTransitionAccess().getIsFireableIsFireableKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
       		setWithLastConsumed($current, "isFireable", true, "is Fireable");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTransitionAccess().getUnorderedGroup_2());
	}

)	otherlv_5='from state' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getFromStateKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getSourceStateStateCrossReference_4_0()); 
	}

)
)	otherlv_7='to' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getToKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_6_0()); 
	}

)
)	otherlv_9='execute' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTransitionAccess().getExecuteKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getActionActionCrossReference_8_0()); 
	}

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTransitionAccess().getCommaKeyword_9_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_12=RULE_ID
	{
		newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getActionActionCrossReference_9_1_0()); 
	}

)
))*(	otherlv_13='guard' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTransitionAccess().getGuardKeyword_10_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getTransitionAccess().getGuardGuardCrossReference_10_1_0()); 
	}

)
)(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTransitionAccess().getCommaKeyword_10_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getTransitionAccess().getGuardGuardCrossReference_10_2_1_0()); 
	}

)
))*)?(	otherlv_17='trigger' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getTransitionAccess().getTriggerKeyword_11_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_18=RULE_ID
	{
		newLeafNode(otherlv_18, grammarAccess.getTransitionAccess().getTriggerTriggerCrossReference_11_1_0()); 
	}

)
))?	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_12());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


