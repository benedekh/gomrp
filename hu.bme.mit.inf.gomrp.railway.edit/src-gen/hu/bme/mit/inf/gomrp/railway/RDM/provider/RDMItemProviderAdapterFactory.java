/**
 */
package hu.bme.mit.inf.gomrp.railway.RDM.provider;

import hu.bme.mit.inf.gomrp.railway.RDM.util.RDMAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class RDMItemProviderAdapterFactory extends RDMAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RDMItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.RailwayDomainModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RailwayDomainModelItemProvider railwayDomainModelItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.RailwayDomainModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRailwayDomainModelAdapter() {
		if (railwayDomainModelItemProvider == null) {
			railwayDomainModelItemProvider = new RailwayDomainModelItemProvider(this);
		}

		return railwayDomainModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.Train} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TrainItemProvider trainItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.Train}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTrainAdapter() {
		if (trainItemProvider == null) {
			trainItemProvider = new TrainItemProvider(this);
		}

		return trainItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.Signal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignalItemProvider signalItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.Signal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignalAdapter() {
		if (signalItemProvider == null) {
			signalItemProvider = new SignalItemProvider(this);
		}

		return signalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.Route} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RouteItemProvider routeItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.Route}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRouteAdapter() {
		if (routeItemProvider == null) {
			routeItemProvider = new RouteItemProvider(this);
		}

		return routeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.Section} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SectionItemProvider sectionItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.Section}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSectionAdapter() {
		if (sectionItemProvider == null) {
			sectionItemProvider = new SectionItemProvider(this);
		}

		return sectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.Turnout} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TurnoutItemProvider turnoutItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.Turnout}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTurnoutAdapter() {
		if (turnoutItemProvider == null) {
			turnoutItemProvider = new TurnoutItemProvider(this);
		}

		return turnoutItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.TurnoutDesiredDirection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TurnoutDesiredDirectionItemProvider turnoutDesiredDirectionItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.TurnoutDesiredDirection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTurnoutDesiredDirectionAdapter() {
		if (turnoutDesiredDirectionItemProvider == null) {
			turnoutDesiredDirectionItemProvider = new TurnoutDesiredDirectionItemProvider(this);
		}

		return turnoutDesiredDirectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.Station} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StationItemProvider stationItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.Station}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStationAdapter() {
		if (stationItemProvider == null) {
			stationItemProvider = new StationItemProvider(this);
		}

		return stationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.ConnectionPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionPointItemProvider connectionPointItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.ConnectionPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionPointAdapter() {
		if (connectionPointItemProvider == null) {
			connectionPointItemProvider = new ConnectionPointItemProvider(this);
		}

		return connectionPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.RouteElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RouteElementItemProvider routeElementItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.RouteElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRouteElementAdapter() {
		if (routeElementItemProvider == null) {
			routeElementItemProvider = new RouteElementItemProvider(this);
		}

		return routeElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link hu.bme.mit.inf.gomrp.railway.RDM.TurnoutSignal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TurnoutSignalItemProvider turnoutSignalItemProvider;

	/**
	 * This creates an adapter for a {@link hu.bme.mit.inf.gomrp.railway.RDM.TurnoutSignal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTurnoutSignalAdapter() {
		if (turnoutSignalItemProvider == null) {
			turnoutSignalItemProvider = new TurnoutSignalItemProvider(this);
		}

		return turnoutSignalItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (railwayDomainModelItemProvider != null) railwayDomainModelItemProvider.dispose();
		if (trainItemProvider != null) trainItemProvider.dispose();
		if (signalItemProvider != null) signalItemProvider.dispose();
		if (routeItemProvider != null) routeItemProvider.dispose();
		if (sectionItemProvider != null) sectionItemProvider.dispose();
		if (turnoutItemProvider != null) turnoutItemProvider.dispose();
		if (turnoutDesiredDirectionItemProvider != null) turnoutDesiredDirectionItemProvider.dispose();
		if (stationItemProvider != null) stationItemProvider.dispose();
		if (connectionPointItemProvider != null) connectionPointItemProvider.dispose();
		if (routeElementItemProvider != null) routeElementItemProvider.dispose();
		if (turnoutSignalItemProvider != null) turnoutSignalItemProvider.dispose();
	}

}
