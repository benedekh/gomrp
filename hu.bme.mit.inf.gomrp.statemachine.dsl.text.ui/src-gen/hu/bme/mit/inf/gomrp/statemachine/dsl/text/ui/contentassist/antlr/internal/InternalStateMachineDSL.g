/*
* generated by Xtext
*/
grammar InternalStateMachineDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package hu.bme.mit.inf.gomrp.statemachine.dsl.text.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hu.bme.mit.inf.gomrp.statemachine.dsl.text.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import hu.bme.mit.inf.gomrp.statemachine.dsl.text.services.StateMachineDSLGrammarAccess;

}

@parser::members {
 
 	private StateMachineDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(StateMachineDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStateMachineBehavioralModel
entryRuleStateMachineBehavioralModel 
:
{ before(grammarAccess.getStateMachineBehavioralModelRule()); }
	 ruleStateMachineBehavioralModel
{ after(grammarAccess.getStateMachineBehavioralModelRule()); } 
	 EOF 
;

// Rule StateMachineBehavioralModel
ruleStateMachineBehavioralModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateMachineBehavioralModelAccess().getGroup()); }
(rule__StateMachineBehavioralModel__Group__0)
{ after(grammarAccess.getStateMachineBehavioralModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInclude
entryRuleInclude 
:
{ before(grammarAccess.getIncludeRule()); }
	 ruleInclude
{ after(grammarAccess.getIncludeRule()); } 
	 EOF 
;

// Rule Include
ruleInclude
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeAccess().getGroup()); }
(rule__Include__Group__0)
{ after(grammarAccess.getIncludeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateMachine
entryRuleStateMachine 
:
{ before(grammarAccess.getStateMachineRule()); }
	 ruleStateMachine
{ after(grammarAccess.getStateMachineRule()); } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateMachineAccess().getGroup()); }
(rule__StateMachine__Group__0)
{ after(grammarAccess.getStateMachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getAlternatives()); }
(rule__Action__Alternatives)
{ after(grammarAccess.getActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionExpression_Impl
entryRuleActionExpression_Impl 
:
{ before(grammarAccess.getActionExpression_ImplRule()); }
	 ruleActionExpression_Impl
{ after(grammarAccess.getActionExpression_ImplRule()); } 
	 EOF 
;

// Rule ActionExpression_Impl
ruleActionExpression_Impl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionExpression_ImplAccess().getGroup()); }
(rule__ActionExpression_Impl__Group__0)
{ after(grammarAccess.getActionExpression_ImplAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChangeTrainCurrentTrackElement
entryRuleChangeTrainCurrentTrackElement 
:
{ before(grammarAccess.getChangeTrainCurrentTrackElementRule()); }
	 ruleChangeTrainCurrentTrackElement
{ after(grammarAccess.getChangeTrainCurrentTrackElementRule()); } 
	 EOF 
;

// Rule ChangeTrainCurrentTrackElement
ruleChangeTrainCurrentTrackElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChangeTrainCurrentTrackElementAccess().getGroup()); }
(rule__ChangeTrainCurrentTrackElement__Group__0)
{ after(grammarAccess.getChangeTrainCurrentTrackElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChangeTurnoutDirection
entryRuleChangeTurnoutDirection 
:
{ before(grammarAccess.getChangeTurnoutDirectionRule()); }
	 ruleChangeTurnoutDirection
{ after(grammarAccess.getChangeTurnoutDirectionRule()); } 
	 EOF 
;

// Rule ChangeTurnoutDirection
ruleChangeTurnoutDirection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChangeTurnoutDirectionAccess().getGroup()); }
(rule__ChangeTurnoutDirection__Group__0)
{ after(grammarAccess.getChangeTurnoutDirectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChangeSignalAllowedSpeed
entryRuleChangeSignalAllowedSpeed 
:
{ before(grammarAccess.getChangeSignalAllowedSpeedRule()); }
	 ruleChangeSignalAllowedSpeed
{ after(grammarAccess.getChangeSignalAllowedSpeedRule()); } 
	 EOF 
;

// Rule ChangeSignalAllowedSpeed
ruleChangeSignalAllowedSpeed
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChangeSignalAllowedSpeedAccess().getGroup()); }
(rule__ChangeSignalAllowedSpeed__Group__0)
{ after(grammarAccess.getChangeSignalAllowedSpeedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChangeTrainHeadingSpeed
entryRuleChangeTrainHeadingSpeed 
:
{ before(grammarAccess.getChangeTrainHeadingSpeedRule()); }
	 ruleChangeTrainHeadingSpeed
{ after(grammarAccess.getChangeTrainHeadingSpeedRule()); } 
	 EOF 
;

// Rule ChangeTrainHeadingSpeed
ruleChangeTrainHeadingSpeed
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChangeTrainHeadingSpeedAccess().getGroup()); }
(rule__ChangeTrainHeadingSpeed__Group__0)
{ after(grammarAccess.getChangeTrainHeadingSpeedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrigger
entryRuleTrigger 
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggerAccess().getAlternatives()); }
(rule__Trigger__Alternatives)
{ after(grammarAccess.getTriggerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrainHeadingSpeedChanged
entryRuleTrainHeadingSpeedChanged 
:
{ before(grammarAccess.getTrainHeadingSpeedChangedRule()); }
	 ruleTrainHeadingSpeedChanged
{ after(grammarAccess.getTrainHeadingSpeedChangedRule()); } 
	 EOF 
;

// Rule TrainHeadingSpeedChanged
ruleTrainHeadingSpeedChanged
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrainHeadingSpeedChangedAccess().getGroup()); }
(rule__TrainHeadingSpeedChanged__Group__0)
{ after(grammarAccess.getTrainHeadingSpeedChangedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrainTrackElementChanged
entryRuleTrainTrackElementChanged 
:
{ before(grammarAccess.getTrainTrackElementChangedRule()); }
	 ruleTrainTrackElementChanged
{ after(grammarAccess.getTrainTrackElementChangedRule()); } 
	 EOF 
;

// Rule TrainTrackElementChanged
ruleTrainTrackElementChanged
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrainTrackElementChangedAccess().getGroup()); }
(rule__TrainTrackElementChanged__Group__0)
{ after(grammarAccess.getTrainTrackElementChangedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalAllowedSpeedChanged
entryRuleSignalAllowedSpeedChanged 
:
{ before(grammarAccess.getSignalAllowedSpeedChangedRule()); }
	 ruleSignalAllowedSpeedChanged
{ after(grammarAccess.getSignalAllowedSpeedChangedRule()); } 
	 EOF 
;

// Rule SignalAllowedSpeedChanged
ruleSignalAllowedSpeedChanged
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalAllowedSpeedChangedAccess().getGroup()); }
(rule__SignalAllowedSpeedChanged__Group__0)
{ after(grammarAccess.getSignalAllowedSpeedChangedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTurnoutDirectionChanged
entryRuleTurnoutDirectionChanged 
:
{ before(grammarAccess.getTurnoutDirectionChangedRule()); }
	 ruleTurnoutDirectionChanged
{ after(grammarAccess.getTurnoutDirectionChangedRule()); } 
	 EOF 
;

// Rule TurnoutDirectionChanged
ruleTurnoutDirectionChanged
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTurnoutDirectionChangedAccess().getGroup()); }
(rule__TurnoutDirectionChanged__Group__0)
{ after(grammarAccess.getTurnoutDirectionChangedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTriggerExpression_Impl
entryRuleTriggerExpression_Impl 
:
{ before(grammarAccess.getTriggerExpression_ImplRule()); }
	 ruleTriggerExpression_Impl
{ after(grammarAccess.getTriggerExpression_ImplRule()); } 
	 EOF 
;

// Rule TriggerExpression_Impl
ruleTriggerExpression_Impl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggerExpression_ImplAccess().getGroup()); }
(rule__TriggerExpression_Impl__Group__0)
{ after(grammarAccess.getTriggerExpression_ImplAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGuard
entryRuleGuard 
:
{ before(grammarAccess.getGuardRule()); }
	 ruleGuard
{ after(grammarAccess.getGuardRule()); } 
	 EOF 
;

// Rule Guard
ruleGuard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGuardAccess().getAlternatives()); }
(rule__Guard__Alternatives)
{ after(grammarAccess.getGuardAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrainCurrentHeadingSpeed
entryRuleTrainCurrentHeadingSpeed 
:
{ before(grammarAccess.getTrainCurrentHeadingSpeedRule()); }
	 ruleTrainCurrentHeadingSpeed
{ after(grammarAccess.getTrainCurrentHeadingSpeedRule()); } 
	 EOF 
;

// Rule TrainCurrentHeadingSpeed
ruleTrainCurrentHeadingSpeed
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrainCurrentHeadingSpeedAccess().getGroup()); }
(rule__TrainCurrentHeadingSpeed__Group__0)
{ after(grammarAccess.getTrainCurrentHeadingSpeedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrainCurrentlyStandsOn
entryRuleTrainCurrentlyStandsOn 
:
{ before(grammarAccess.getTrainCurrentlyStandsOnRule()); }
	 ruleTrainCurrentlyStandsOn
{ after(grammarAccess.getTrainCurrentlyStandsOnRule()); } 
	 EOF 
;

// Rule TrainCurrentlyStandsOn
ruleTrainCurrentlyStandsOn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrainCurrentlyStandsOnAccess().getGroup()); }
(rule__TrainCurrentlyStandsOn__Group__0)
{ after(grammarAccess.getTrainCurrentlyStandsOnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTurnoutCurrentDirection
entryRuleTurnoutCurrentDirection 
:
{ before(grammarAccess.getTurnoutCurrentDirectionRule()); }
	 ruleTurnoutCurrentDirection
{ after(grammarAccess.getTurnoutCurrentDirectionRule()); } 
	 EOF 
;

// Rule TurnoutCurrentDirection
ruleTurnoutCurrentDirection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTurnoutCurrentDirectionAccess().getGroup()); }
(rule__TurnoutCurrentDirection__Group__0)
{ after(grammarAccess.getTurnoutCurrentDirectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalCurrentAllowedSpeed
entryRuleSignalCurrentAllowedSpeed 
:
{ before(grammarAccess.getSignalCurrentAllowedSpeedRule()); }
	 ruleSignalCurrentAllowedSpeed
{ after(grammarAccess.getSignalCurrentAllowedSpeedRule()); } 
	 EOF 
;

// Rule SignalCurrentAllowedSpeed
ruleSignalCurrentAllowedSpeed
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalCurrentAllowedSpeedAccess().getGroup()); }
(rule__SignalCurrentAllowedSpeed__Group__0)
{ after(grammarAccess.getSignalCurrentAllowedSpeedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNextTrackElementIs
entryRuleNextTrackElementIs 
:
{ before(grammarAccess.getNextTrackElementIsRule()); }
	 ruleNextTrackElementIs
{ after(grammarAccess.getNextTrackElementIsRule()); } 
	 EOF 
;

// Rule NextTrackElementIs
ruleNextTrackElementIs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNextTrackElementIsAccess().getGroup()); }
(rule__NextTrackElementIs__Group__0)
{ after(grammarAccess.getNextTrackElementIsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTurnoutHasDesiredDirection
entryRuleTurnoutHasDesiredDirection 
:
{ before(grammarAccess.getTurnoutHasDesiredDirectionRule()); }
	 ruleTurnoutHasDesiredDirection
{ after(grammarAccess.getTurnoutHasDesiredDirectionRule()); } 
	 EOF 
;

// Rule TurnoutHasDesiredDirection
ruleTurnoutHasDesiredDirection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTurnoutHasDesiredDirectionAccess().getGroup()); }
(rule__TurnoutHasDesiredDirection__Group__0)
{ after(grammarAccess.getTurnoutHasDesiredDirectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGuardExpression_Impl
entryRuleGuardExpression_Impl 
:
{ before(grammarAccess.getGuardExpression_ImplRule()); }
	 ruleGuardExpression_Impl
{ after(grammarAccess.getGuardExpression_ImplRule()); } 
	 EOF 
;

// Rule GuardExpression_Impl
ruleGuardExpression_Impl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGuardExpression_ImplAccess().getGroup()); }
(rule__GuardExpression_Impl__Group__0)
{ after(grammarAccess.getGuardExpression_ImplAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getChangeTrainHeadingSpeedParserRuleCall_0()); }
	ruleChangeTrainHeadingSpeed
{ after(grammarAccess.getActionAccess().getChangeTrainHeadingSpeedParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getChangeSignalAllowedSpeedParserRuleCall_1()); }
	ruleChangeSignalAllowedSpeed
{ after(grammarAccess.getActionAccess().getChangeSignalAllowedSpeedParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getActionAccess().getChangeTurnoutDirectionParserRuleCall_2()); }
	ruleChangeTurnoutDirection
{ after(grammarAccess.getActionAccess().getChangeTurnoutDirectionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getActionAccess().getChangeTrainCurrentTrackElementParserRuleCall_3()); }
	ruleChangeTrainCurrentTrackElement
{ after(grammarAccess.getActionAccess().getChangeTrainCurrentTrackElementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getActionAccess().getActionExpression_ImplParserRuleCall_4()); }
	ruleActionExpression_Impl
{ after(grammarAccess.getActionAccess().getActionExpression_ImplParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getTrainHeadingSpeedChangedParserRuleCall_0()); }
	ruleTrainHeadingSpeedChanged
{ after(grammarAccess.getTriggerAccess().getTrainHeadingSpeedChangedParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTriggerAccess().getTrainTrackElementChangedParserRuleCall_1()); }
	ruleTrainTrackElementChanged
{ after(grammarAccess.getTriggerAccess().getTrainTrackElementChangedParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTriggerAccess().getSignalAllowedSpeedChangedParserRuleCall_2()); }
	ruleSignalAllowedSpeedChanged
{ after(grammarAccess.getTriggerAccess().getSignalAllowedSpeedChangedParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTriggerAccess().getTurnoutDirectionChangedParserRuleCall_3()); }
	ruleTurnoutDirectionChanged
{ after(grammarAccess.getTriggerAccess().getTurnoutDirectionChangedParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTriggerAccess().getTriggerExpression_ImplParserRuleCall_4()); }
	ruleTriggerExpression_Impl
{ after(grammarAccess.getTriggerAccess().getTriggerExpression_ImplParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Guard__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardAccess().getTrainCurrentHeadingSpeedParserRuleCall_0()); }
	ruleTrainCurrentHeadingSpeed
{ after(grammarAccess.getGuardAccess().getTrainCurrentHeadingSpeedParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGuardAccess().getTrainCurrentlyStandsOnParserRuleCall_1()); }
	ruleTrainCurrentlyStandsOn
{ after(grammarAccess.getGuardAccess().getTrainCurrentlyStandsOnParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getGuardAccess().getTurnoutCurrentDirectionParserRuleCall_2()); }
	ruleTurnoutCurrentDirection
{ after(grammarAccess.getGuardAccess().getTurnoutCurrentDirectionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getGuardAccess().getSignalCurrentAllowedSpeedParserRuleCall_3()); }
	ruleSignalCurrentAllowedSpeed
{ after(grammarAccess.getGuardAccess().getSignalCurrentAllowedSpeedParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getGuardAccess().getNextTrackElementIsParserRuleCall_4()); }
	ruleNextTrackElementIs
{ after(grammarAccess.getGuardAccess().getNextTrackElementIsParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getGuardAccess().getTurnoutHasDesiredDirectionParserRuleCall_5()); }
	ruleTurnoutHasDesiredDirection
{ after(grammarAccess.getGuardAccess().getTurnoutHasDesiredDirectionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getGuardAccess().getGuardExpression_ImplParserRuleCall_6()); }
	ruleGuardExpression_Impl
{ after(grammarAccess.getGuardAccess().getGuardExpression_ImplParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StateMachineBehavioralModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachineBehavioralModel__Group__0__Impl
	rule__StateMachineBehavioralModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachineBehavioralModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineBehavioralModelAccess().getStateMachineBehavioralModelAction_0()); }
(

)
{ after(grammarAccess.getStateMachineBehavioralModelAccess().getStateMachineBehavioralModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachineBehavioralModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachineBehavioralModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachineBehavioralModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineBehavioralModelAccess().getGroup_1()); }
(rule__StateMachineBehavioralModel__Group_1__0)
{ after(grammarAccess.getStateMachineBehavioralModelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateMachineBehavioralModel__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachineBehavioralModel__Group_1__0__Impl
	rule__StateMachineBehavioralModel__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachineBehavioralModel__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineBehavioralModelAccess().getIncludesAssignment_1_0()); }
(rule__StateMachineBehavioralModel__IncludesAssignment_1_0)*
{ after(grammarAccess.getStateMachineBehavioralModelAccess().getIncludesAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachineBehavioralModel__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachineBehavioralModel__Group_1__1__Impl
	rule__StateMachineBehavioralModel__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachineBehavioralModel__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineBehavioralModelAccess().getStatemachinesAssignment_1_1()); }
(rule__StateMachineBehavioralModel__StatemachinesAssignment_1_1)
{ after(grammarAccess.getStateMachineBehavioralModelAccess().getStatemachinesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachineBehavioralModel__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachineBehavioralModel__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachineBehavioralModel__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineBehavioralModelAccess().getStatemachinesAssignment_1_2()); }
(rule__StateMachineBehavioralModel__StatemachinesAssignment_1_2)*
{ after(grammarAccess.getStateMachineBehavioralModelAccess().getStatemachinesAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Include__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__0__Impl
	rule__Include__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getIncludeKeyword_0()); }

	'include' 

{ after(grammarAccess.getIncludeAccess().getIncludeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getFilenameAssignment_1()); }
(rule__Include__FilenameAssignment_1)
{ after(grammarAccess.getIncludeAccess().getFilenameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateMachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__0__Impl
	rule__StateMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachineKeyword_0()); }

	'StateMachine' 

{ after(grammarAccess.getStateMachineAccess().getStateMachineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__1__Impl
	rule__StateMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNameAssignment_1()); }
(rule__StateMachine__NameAssignment_1)
{ after(grammarAccess.getStateMachineAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__2__Impl
	rule__StateMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getForObjectKeyword_2()); }

	'for object' 

{ after(grammarAccess.getStateMachineAccess().getForObjectKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__3__Impl
	rule__StateMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getReferredObjectAssignment_3()); }
(rule__StateMachine__ReferredObjectAssignment_3)
{ after(grammarAccess.getStateMachineAccess().getReferredObjectAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__4__Impl
	rule__StateMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__5__Impl
	rule__StateMachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_5()); }
(rule__StateMachine__Group_5__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__6__Impl
	rule__StateMachine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_6()); }
(rule__StateMachine__Group_6__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__7__Impl
	rule__StateMachine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_7()); }
(rule__StateMachine__Group_7__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__8__Impl
	rule__StateMachine__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_8()); }
(rule__StateMachine__Group_8__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__9__Impl
	rule__StateMachine__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_9()); }
(rule__StateMachine__Group_9__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__StateMachine__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_5__0__Impl
	rule__StateMachine__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getActionsKeyword_5_0()); }

	'Actions:' 

{ after(grammarAccess.getStateMachineAccess().getActionsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_5__1__Impl
	rule__StateMachine__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getActionsAssignment_5_1()); }
(rule__StateMachine__ActionsAssignment_5_1)*
{ after(grammarAccess.getStateMachineAccess().getActionsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEndActionsKeyword_5_2()); }

	'EndActions' 

{ after(grammarAccess.getStateMachineAccess().getEndActionsKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StateMachine__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_6__0__Impl
	rule__StateMachine__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGuardsKeyword_6_0()); }

	'Guards:' 

{ after(grammarAccess.getStateMachineAccess().getGuardsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_6__1__Impl
	rule__StateMachine__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGuardsAssignment_6_1()); }
(rule__StateMachine__GuardsAssignment_6_1)*
{ after(grammarAccess.getStateMachineAccess().getGuardsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEndGuardsKeyword_6_2()); }

	'EndGuards' 

{ after(grammarAccess.getStateMachineAccess().getEndGuardsKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StateMachine__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_7__0__Impl
	rule__StateMachine__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTriggersKeyword_7_0()); }

	'Triggers:' 

{ after(grammarAccess.getStateMachineAccess().getTriggersKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_7__1__Impl
	rule__StateMachine__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTriggersAssignment_7_1()); }
(rule__StateMachine__TriggersAssignment_7_1)*
{ after(grammarAccess.getStateMachineAccess().getTriggersAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEndTriggersKeyword_7_2()); }

	'EndTriggers' 

{ after(grammarAccess.getStateMachineAccess().getEndTriggersKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StateMachine__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_8__0__Impl
	rule__StateMachine__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStatesKeyword_8_0()); }

	'States:' 

{ after(grammarAccess.getStateMachineAccess().getStatesKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_8__1__Impl
	rule__StateMachine__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStatesAssignment_8_1()); }
(rule__StateMachine__StatesAssignment_8_1)*
{ after(grammarAccess.getStateMachineAccess().getStatesAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEndStatesKeyword_8_2()); }

	'EndStates' 

{ after(grammarAccess.getStateMachineAccess().getEndStatesKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StateMachine__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_9__0__Impl
	rule__StateMachine__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsKeyword_9_0()); }

	'Transitions:' 

{ after(grammarAccess.getStateMachineAccess().getTransitionsKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_9__1__Impl
	rule__StateMachine__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsAssignment_9_1()); }
(rule__StateMachine__TransitionsAssignment_9_1)*
{ after(grammarAccess.getStateMachineAccess().getTransitionsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEndTransitionsKeyword_9_2()); }

	'EndTransitions' 

{ after(grammarAccess.getStateMachineAccess().getEndTransitionsKeyword_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ActionExpression_Impl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionExpression_Impl__Group__0__Impl
	rule__ActionExpression_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression_Impl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpression_ImplAccess().getActionExpressionKeyword_0()); }

	'ActionExpression' 

{ after(grammarAccess.getActionExpression_ImplAccess().getActionExpressionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionExpression_Impl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionExpression_Impl__Group__1__Impl
	rule__ActionExpression_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression_Impl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpression_ImplAccess().getNameAssignment_1()); }
(rule__ActionExpression_Impl__NameAssignment_1)
{ after(grammarAccess.getActionExpression_ImplAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionExpression_Impl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionExpression_Impl__Group__2__Impl
	rule__ActionExpression_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression_Impl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpression_ImplAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getActionExpression_ImplAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionExpression_Impl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionExpression_Impl__Group__3__Impl
	rule__ActionExpression_Impl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression_Impl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpression_ImplAccess().getExpressionAssignment_3()); }
(rule__ActionExpression_Impl__ExpressionAssignment_3)
{ after(grammarAccess.getActionExpression_ImplAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionExpression_Impl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionExpression_Impl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression_Impl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpression_ImplAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getActionExpression_ImplAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ChangeTrainCurrentTrackElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChangeTrainCurrentTrackElement__Group__0__Impl
	rule__ChangeTrainCurrentTrackElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTrainCurrentTrackElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeTrainCurrentTrackElementAccess().getChangeTrainCurrentTrackElementKeyword_0()); }

	'ChangeTrainCurrentTrackElement' 

{ after(grammarAccess.getChangeTrainCurrentTrackElementAccess().getChangeTrainCurrentTrackElementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeTrainCurrentTrackElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChangeTrainCurrentTrackElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTrainCurrentTrackElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeTrainCurrentTrackElementAccess().getNameAssignment_1()); }
(rule__ChangeTrainCurrentTrackElement__NameAssignment_1)
{ after(grammarAccess.getChangeTrainCurrentTrackElementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChangeTurnoutDirection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChangeTurnoutDirection__Group__0__Impl
	rule__ChangeTurnoutDirection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTurnoutDirection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeTurnoutDirectionAccess().getChangeTurnoutDirectionKeyword_0()); }

	'ChangeTurnoutDirection' 

{ after(grammarAccess.getChangeTurnoutDirectionAccess().getChangeTurnoutDirectionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeTurnoutDirection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChangeTurnoutDirection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTurnoutDirection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeTurnoutDirectionAccess().getNameAssignment_1()); }
(rule__ChangeTurnoutDirection__NameAssignment_1)
{ after(grammarAccess.getChangeTurnoutDirectionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChangeSignalAllowedSpeed__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChangeSignalAllowedSpeed__Group__0__Impl
	rule__ChangeSignalAllowedSpeed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSignalAllowedSpeed__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeSignalAllowedSpeedAccess().getChangeSignalAllowedSpeedKeyword_0()); }

	'ChangeSignalAllowedSpeed' 

{ after(grammarAccess.getChangeSignalAllowedSpeedAccess().getChangeSignalAllowedSpeedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeSignalAllowedSpeed__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChangeSignalAllowedSpeed__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSignalAllowedSpeed__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeSignalAllowedSpeedAccess().getNameAssignment_1()); }
(rule__ChangeSignalAllowedSpeed__NameAssignment_1)
{ after(grammarAccess.getChangeSignalAllowedSpeedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChangeTrainHeadingSpeed__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChangeTrainHeadingSpeed__Group__0__Impl
	rule__ChangeTrainHeadingSpeed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTrainHeadingSpeed__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeTrainHeadingSpeedAccess().getChangeTrainHeadingSpeedKeyword_0()); }

	'ChangeTrainHeadingSpeed' 

{ after(grammarAccess.getChangeTrainHeadingSpeedAccess().getChangeTrainHeadingSpeedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChangeTrainHeadingSpeed__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChangeTrainHeadingSpeed__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTrainHeadingSpeed__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeTrainHeadingSpeedAccess().getNameAssignment_1()); }
(rule__ChangeTrainHeadingSpeed__NameAssignment_1)
{ after(grammarAccess.getChangeTrainHeadingSpeedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrainHeadingSpeedChanged__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrainHeadingSpeedChanged__Group__0__Impl
	rule__TrainHeadingSpeedChanged__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainHeadingSpeedChanged__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainHeadingSpeedChangedAccess().getTrainHeadingSpeedChangedKeyword_0()); }

	'TrainHeadingSpeedChanged' 

{ after(grammarAccess.getTrainHeadingSpeedChangedAccess().getTrainHeadingSpeedChangedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrainHeadingSpeedChanged__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrainHeadingSpeedChanged__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainHeadingSpeedChanged__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainHeadingSpeedChangedAccess().getNameAssignment_1()); }
(rule__TrainHeadingSpeedChanged__NameAssignment_1)
{ after(grammarAccess.getTrainHeadingSpeedChangedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrainTrackElementChanged__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrainTrackElementChanged__Group__0__Impl
	rule__TrainTrackElementChanged__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainTrackElementChanged__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainTrackElementChangedAccess().getTrainTrackElementChangedKeyword_0()); }

	'TrainTrackElementChanged' 

{ after(grammarAccess.getTrainTrackElementChangedAccess().getTrainTrackElementChangedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrainTrackElementChanged__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrainTrackElementChanged__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainTrackElementChanged__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainTrackElementChangedAccess().getNameAssignment_1()); }
(rule__TrainTrackElementChanged__NameAssignment_1)
{ after(grammarAccess.getTrainTrackElementChangedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalAllowedSpeedChanged__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAllowedSpeedChanged__Group__0__Impl
	rule__SignalAllowedSpeedChanged__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAllowedSpeedChanged__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAllowedSpeedChangedAccess().getSignalAllowedSpeedChangedKeyword_0()); }

	'SignalAllowedSpeedChanged' 

{ after(grammarAccess.getSignalAllowedSpeedChangedAccess().getSignalAllowedSpeedChangedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAllowedSpeedChanged__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAllowedSpeedChanged__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAllowedSpeedChanged__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAllowedSpeedChangedAccess().getNameAssignment_1()); }
(rule__SignalAllowedSpeedChanged__NameAssignment_1)
{ after(grammarAccess.getSignalAllowedSpeedChangedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TurnoutDirectionChanged__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TurnoutDirectionChanged__Group__0__Impl
	rule__TurnoutDirectionChanged__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnoutDirectionChanged__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnoutDirectionChangedAccess().getTurnoutDirectionChangedKeyword_0()); }

	'TurnoutDirectionChanged' 

{ after(grammarAccess.getTurnoutDirectionChangedAccess().getTurnoutDirectionChangedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TurnoutDirectionChanged__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TurnoutDirectionChanged__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnoutDirectionChanged__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnoutDirectionChangedAccess().getNameAssignment_1()); }
(rule__TurnoutDirectionChanged__NameAssignment_1)
{ after(grammarAccess.getTurnoutDirectionChangedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TriggerExpression_Impl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerExpression_Impl__Group__0__Impl
	rule__TriggerExpression_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerExpression_Impl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerExpression_ImplAccess().getTriggerExpressionKeyword_0()); }

	'TriggerExpression' 

{ after(grammarAccess.getTriggerExpression_ImplAccess().getTriggerExpressionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerExpression_Impl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerExpression_Impl__Group__1__Impl
	rule__TriggerExpression_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerExpression_Impl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerExpression_ImplAccess().getNameAssignment_1()); }
(rule__TriggerExpression_Impl__NameAssignment_1)
{ after(grammarAccess.getTriggerExpression_ImplAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerExpression_Impl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerExpression_Impl__Group__2__Impl
	rule__TriggerExpression_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerExpression_Impl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerExpression_ImplAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getTriggerExpression_ImplAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerExpression_Impl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerExpression_Impl__Group__3__Impl
	rule__TriggerExpression_Impl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerExpression_Impl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerExpression_ImplAccess().getExpressionAssignment_3()); }
(rule__TriggerExpression_Impl__ExpressionAssignment_3)
{ after(grammarAccess.getTriggerExpression_ImplAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerExpression_Impl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerExpression_Impl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerExpression_Impl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerExpression_ImplAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getTriggerExpression_ImplAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TrainCurrentHeadingSpeed__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrainCurrentHeadingSpeed__Group__0__Impl
	rule__TrainCurrentHeadingSpeed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainCurrentHeadingSpeed__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainCurrentHeadingSpeedAccess().getTrainCurrentHeadingSpeedKeyword_0()); }

	'TrainCurrentHeadingSpeed' 

{ after(grammarAccess.getTrainCurrentHeadingSpeedAccess().getTrainCurrentHeadingSpeedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrainCurrentHeadingSpeed__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrainCurrentHeadingSpeed__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainCurrentHeadingSpeed__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainCurrentHeadingSpeedAccess().getNameAssignment_1()); }
(rule__TrainCurrentHeadingSpeed__NameAssignment_1)
{ after(grammarAccess.getTrainCurrentHeadingSpeedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrainCurrentlyStandsOn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrainCurrentlyStandsOn__Group__0__Impl
	rule__TrainCurrentlyStandsOn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainCurrentlyStandsOn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainCurrentlyStandsOnAccess().getTrainCurrentlyStandsOnKeyword_0()); }

	'TrainCurrentlyStandsOn' 

{ after(grammarAccess.getTrainCurrentlyStandsOnAccess().getTrainCurrentlyStandsOnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrainCurrentlyStandsOn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrainCurrentlyStandsOn__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrainCurrentlyStandsOn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainCurrentlyStandsOnAccess().getNameAssignment_1()); }
(rule__TrainCurrentlyStandsOn__NameAssignment_1)
{ after(grammarAccess.getTrainCurrentlyStandsOnAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TurnoutCurrentDirection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TurnoutCurrentDirection__Group__0__Impl
	rule__TurnoutCurrentDirection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnoutCurrentDirection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnoutCurrentDirectionAccess().getTurnoutCurrentDirectionKeyword_0()); }

	'TurnoutCurrentDirection' 

{ after(grammarAccess.getTurnoutCurrentDirectionAccess().getTurnoutCurrentDirectionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TurnoutCurrentDirection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TurnoutCurrentDirection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnoutCurrentDirection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnoutCurrentDirectionAccess().getNameAssignment_1()); }
(rule__TurnoutCurrentDirection__NameAssignment_1)
{ after(grammarAccess.getTurnoutCurrentDirectionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalCurrentAllowedSpeed__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalCurrentAllowedSpeed__Group__0__Impl
	rule__SignalCurrentAllowedSpeed__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalCurrentAllowedSpeed__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalCurrentAllowedSpeedAccess().getSignalCurrentAllowedSpeedKeyword_0()); }

	'SignalCurrentAllowedSpeed' 

{ after(grammarAccess.getSignalCurrentAllowedSpeedAccess().getSignalCurrentAllowedSpeedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalCurrentAllowedSpeed__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalCurrentAllowedSpeed__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalCurrentAllowedSpeed__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalCurrentAllowedSpeedAccess().getNameAssignment_1()); }
(rule__SignalCurrentAllowedSpeed__NameAssignment_1)
{ after(grammarAccess.getSignalCurrentAllowedSpeedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NextTrackElementIs__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextTrackElementIs__Group__0__Impl
	rule__NextTrackElementIs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NextTrackElementIs__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextTrackElementIsAccess().getNextTrackElementIsKeyword_0()); }

	'NextTrackElementIs' 

{ after(grammarAccess.getNextTrackElementIsAccess().getNextTrackElementIsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextTrackElementIs__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextTrackElementIs__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NextTrackElementIs__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextTrackElementIsAccess().getNameAssignment_1()); }
(rule__NextTrackElementIs__NameAssignment_1)
{ after(grammarAccess.getNextTrackElementIsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TurnoutHasDesiredDirection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TurnoutHasDesiredDirection__Group__0__Impl
	rule__TurnoutHasDesiredDirection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnoutHasDesiredDirection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnoutHasDesiredDirectionAccess().getTurnoutHasDesiredDirectionKeyword_0()); }

	'TurnoutHasDesiredDirection' 

{ after(grammarAccess.getTurnoutHasDesiredDirectionAccess().getTurnoutHasDesiredDirectionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TurnoutHasDesiredDirection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TurnoutHasDesiredDirection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurnoutHasDesiredDirection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnoutHasDesiredDirectionAccess().getNameAssignment_1()); }
(rule__TurnoutHasDesiredDirection__NameAssignment_1)
{ after(grammarAccess.getTurnoutHasDesiredDirectionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GuardExpression_Impl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GuardExpression_Impl__Group__0__Impl
	rule__GuardExpression_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardExpression_Impl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardExpression_ImplAccess().getGuardExpressionKeyword_0()); }

	'GuardExpression' 

{ after(grammarAccess.getGuardExpression_ImplAccess().getGuardExpressionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GuardExpression_Impl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GuardExpression_Impl__Group__1__Impl
	rule__GuardExpression_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardExpression_Impl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardExpression_ImplAccess().getNameAssignment_1()); }
(rule__GuardExpression_Impl__NameAssignment_1)
{ after(grammarAccess.getGuardExpression_ImplAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GuardExpression_Impl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GuardExpression_Impl__Group__2__Impl
	rule__GuardExpression_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardExpression_Impl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardExpression_ImplAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getGuardExpression_ImplAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GuardExpression_Impl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GuardExpression_Impl__Group__3__Impl
	rule__GuardExpression_Impl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardExpression_Impl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardExpression_ImplAccess().getExpressionAssignment_3()); }
(rule__GuardExpression_Impl__ExpressionAssignment_3)
{ after(grammarAccess.getGuardExpression_ImplAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GuardExpression_Impl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GuardExpression_Impl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardExpression_Impl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardExpression_ImplAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getGuardExpression_ImplAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_0()); }
(rule__State__NameAssignment_0)
{ after(grammarAccess.getStateAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getUnorderedGroup_1()); }
(rule__State__UnorderedGroup_1)
{ after(grammarAccess.getStateAccess().getUnorderedGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNameAssignment_0()); }
(rule__Transition__NameAssignment_0)
{ after(grammarAccess.getTransitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getUnorderedGroup_2()); }
(rule__Transition__UnorderedGroup_2)
{ after(grammarAccess.getTransitionAccess().getUnorderedGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getFromStateKeyword_3()); }

	'from state' 

{ after(grammarAccess.getTransitionAccess().getFromStateKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceStateAssignment_4()); }
(rule__Transition__SourceStateAssignment_4)
{ after(grammarAccess.getTransitionAccess().getSourceStateAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__5__Impl
	rule__Transition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getToKeyword_5()); }

	'to' 

{ after(grammarAccess.getTransitionAccess().getToKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__6__Impl
	rule__Transition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateAssignment_6()); }
(rule__Transition__TargetStateAssignment_6)
{ after(grammarAccess.getTransitionAccess().getTargetStateAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__7__Impl
	rule__Transition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getExecuteKeyword_7()); }

	'execute' 

{ after(grammarAccess.getTransitionAccess().getExecuteKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__8__Impl
	rule__Transition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getActionAssignment_8()); }
(rule__Transition__ActionAssignment_8)
{ after(grammarAccess.getTransitionAccess().getActionAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__9__Impl
	rule__Transition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_9()); }
(rule__Transition__Group_9__0)*
{ after(grammarAccess.getTransitionAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__10__Impl
	rule__Transition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_10()); }
(rule__Transition__Group_10__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__11__Impl
	rule__Transition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_11()); }
(rule__Transition__Group_11__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_12()); }

	'}' 

{ after(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__Transition__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_9__0__Impl
	rule__Transition__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getTransitionAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getActionAssignment_9_1()); }
(rule__Transition__ActionAssignment_9_1)
{ after(grammarAccess.getTransitionAccess().getActionAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_10__0__Impl
	rule__Transition__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardKeyword_10_0()); }

	'guard' 

{ after(grammarAccess.getTransitionAccess().getGuardKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_10__1__Impl
	rule__Transition__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardAssignment_10_1()); }
(rule__Transition__GuardAssignment_10_1)
{ after(grammarAccess.getTransitionAccess().getGuardAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_10_2()); }
(rule__Transition__Group_10_2__0)*
{ after(grammarAccess.getTransitionAccess().getGroup_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transition__Group_10_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_10_2__0__Impl
	rule__Transition__Group_10_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_10_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getCommaKeyword_10_2_0()); }

	',' 

{ after(grammarAccess.getTransitionAccess().getCommaKeyword_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_10_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_10_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_10_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardAssignment_10_2_1()); }
(rule__Transition__GuardAssignment_10_2_1)
{ after(grammarAccess.getTransitionAccess().getGuardAssignment_10_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_11__0__Impl
	rule__Transition__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerKeyword_11_0()); }

	'trigger' 

{ after(grammarAccess.getTransitionAccess().getTriggerKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerAssignment_11_1()); }
(rule__Transition__TriggerAssignment_11_1)
{ after(grammarAccess.getTransitionAccess().getTriggerAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__State__UnorderedGroup_1
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getStateAccess().getUnorderedGroup_1());
    }
:
	rule__State__UnorderedGroup_1__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getStateAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__State__UnorderedGroup_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStateAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStateAccess().getUnorderedGroup_1(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getStateAccess().getIsInitialAssignment_1_0()); }
						(rule__State__IsInitialAssignment_1_0)
						{ after(grammarAccess.getStateAccess().getIsInitialAssignment_1_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStateAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStateAccess().getUnorderedGroup_1(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getStateAccess().getIsActiveAssignment_1_1()); }
						(rule__State__IsActiveAssignment_1_1)
						{ after(grammarAccess.getStateAccess().getIsActiveAssignment_1_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStateAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__State__UnorderedGroup_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__UnorderedGroup_1__Impl
	rule__State__UnorderedGroup_1__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__State__UnorderedGroup_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__UnorderedGroup_1__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__UnorderedGroup_2
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getTransitionAccess().getUnorderedGroup_2());
    }
:
	rule__Transition__UnorderedGroup_2__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getTransitionAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}


rule__Transition__UnorderedGroup_2__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTransitionAccess().getIsEnabledAssignment_2_0()); }
						(rule__Transition__IsEnabledAssignment_2_0)
						{ after(grammarAccess.getTransitionAccess().getIsEnabledAssignment_2_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTransitionAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTransitionAccess().getUnorderedGroup_2(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getTransitionAccess().getIsFireableAssignment_2_1()); }
						(rule__Transition__IsFireableAssignment_2_1)
						{ after(grammarAccess.getTransitionAccess().getIsFireableAssignment_2_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTransitionAccess().getUnorderedGroup_2());
	restoreStackSize(stackSize);
}


rule__Transition__UnorderedGroup_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__UnorderedGroup_2__Impl
	rule__Transition__UnorderedGroup_2__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__UnorderedGroup_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__UnorderedGroup_2__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__StateMachineBehavioralModel__IncludesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineBehavioralModelAccess().getIncludesIncludeParserRuleCall_1_0_0()); }
	ruleInclude{ after(grammarAccess.getStateMachineBehavioralModelAccess().getIncludesIncludeParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachineBehavioralModel__StatemachinesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineBehavioralModelAccess().getStatemachinesStateMachineParserRuleCall_1_1_0()); }
	ruleStateMachine{ after(grammarAccess.getStateMachineBehavioralModelAccess().getStatemachinesStateMachineParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachineBehavioralModel__StatemachinesAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineBehavioralModelAccess().getStatemachinesStateMachineParserRuleCall_1_2_0()); }
	ruleStateMachine{ after(grammarAccess.getStateMachineBehavioralModelAccess().getStatemachinesStateMachineParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Include__FilenameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getFilenameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getIncludeAccess().getFilenameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__ReferredObjectAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getReferredObjectRDMElementCrossReference_3_0()); }
(
{ before(grammarAccess.getStateMachineAccess().getReferredObjectRDMElementIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getStateMachineAccess().getReferredObjectRDMElementIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getStateMachineAccess().getReferredObjectRDMElementCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__ActionsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getActionsActionParserRuleCall_5_1_0()); }
	ruleAction{ after(grammarAccess.getStateMachineAccess().getActionsActionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__GuardsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGuardsGuardParserRuleCall_6_1_0()); }
	ruleGuard{ after(grammarAccess.getStateMachineAccess().getGuardsGuardParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__TriggersAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTriggersTriggerParserRuleCall_7_1_0()); }
	ruleTrigger{ after(grammarAccess.getStateMachineAccess().getTriggersTriggerParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__StatesAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_8_1_0()); }
	ruleState{ after(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__TransitionsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_9_1_0()); }
	ruleTransition{ after(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression_Impl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpression_ImplAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getActionExpression_ImplAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression_Impl__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpression_ImplAccess().getExpressionEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getActionExpression_ImplAccess().getExpressionEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTrainCurrentTrackElement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeTrainCurrentTrackElementAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getChangeTrainCurrentTrackElementAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTurnoutDirection__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeTurnoutDirectionAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getChangeTurnoutDirectionAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeSignalAllowedSpeed__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeSignalAllowedSpeedAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getChangeSignalAllowedSpeedAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChangeTrainHeadingSpeed__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChangeTrainHeadingSpeedAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getChangeTrainHeadingSpeedAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrainHeadingSpeedChanged__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainHeadingSpeedChangedAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTrainHeadingSpeedChangedAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrainTrackElementChanged__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainTrackElementChangedAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTrainTrackElementChangedAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAllowedSpeedChanged__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAllowedSpeedChangedAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getSignalAllowedSpeedChangedAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TurnoutDirectionChanged__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnoutDirectionChangedAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTurnoutDirectionChangedAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerExpression_Impl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerExpression_ImplAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTriggerExpression_ImplAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerExpression_Impl__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerExpression_ImplAccess().getExpressionEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getTriggerExpression_ImplAccess().getExpressionEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrainCurrentHeadingSpeed__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainCurrentHeadingSpeedAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTrainCurrentHeadingSpeedAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrainCurrentlyStandsOn__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrainCurrentlyStandsOnAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTrainCurrentlyStandsOnAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TurnoutCurrentDirection__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnoutCurrentDirectionAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTurnoutCurrentDirectionAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalCurrentAllowedSpeed__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalCurrentAllowedSpeedAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getSignalCurrentAllowedSpeedAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NextTrackElementIs__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextTrackElementIsAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getNextTrackElementIsAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TurnoutHasDesiredDirection__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTurnoutHasDesiredDirectionAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTurnoutHasDesiredDirectionAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GuardExpression_Impl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardExpression_ImplAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGuardExpression_ImplAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GuardExpression_Impl__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGuardExpression_ImplAccess().getExpressionEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getGuardExpression_ImplAccess().getExpressionEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__IsInitialAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsInitialIsInitialKeyword_1_0_0()); }
(
{ before(grammarAccess.getStateAccess().getIsInitialIsInitialKeyword_1_0_0()); }

	'is Initial' 

{ after(grammarAccess.getStateAccess().getIsInitialIsInitialKeyword_1_0_0()); }
)

{ after(grammarAccess.getStateAccess().getIsInitialIsInitialKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__IsActiveAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsActiveIsActiveKeyword_1_1_0()); }
(
{ before(grammarAccess.getStateAccess().getIsActiveIsActiveKeyword_1_1_0()); }

	'is Active' 

{ after(grammarAccess.getStateAccess().getIsActiveIsActiveKeyword_1_1_0()); }
)

{ after(grammarAccess.getStateAccess().getIsActiveIsActiveKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__IsEnabledAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getIsEnabledIsEnabledKeyword_2_0_0()); }
(
{ before(grammarAccess.getTransitionAccess().getIsEnabledIsEnabledKeyword_2_0_0()); }

	'is Enabled' 

{ after(grammarAccess.getTransitionAccess().getIsEnabledIsEnabledKeyword_2_0_0()); }
)

{ after(grammarAccess.getTransitionAccess().getIsEnabledIsEnabledKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__IsFireableAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getIsFireableIsFireableKeyword_2_1_0()); }
(
{ before(grammarAccess.getTransitionAccess().getIsFireableIsFireableKeyword_2_1_0()); }

	'is Fireable' 

{ after(grammarAccess.getTransitionAccess().getIsFireableIsFireableKeyword_2_1_0()); }
)

{ after(grammarAccess.getTransitionAccess().getIsFireableIsFireableKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__SourceStateAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceStateStateCrossReference_4_0()); }
(
{ before(grammarAccess.getTransitionAccess().getSourceStateStateIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getSourceStateStateIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getSourceStateStateCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetStateAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_6_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTargetStateStateIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getTargetStateStateIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ActionAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getActionActionCrossReference_8_0()); }
(
{ before(grammarAccess.getTransitionAccess().getActionActionIDTerminalRuleCall_8_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getActionActionIDTerminalRuleCall_8_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getActionActionCrossReference_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ActionAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getActionActionCrossReference_9_1_0()); }
(
{ before(grammarAccess.getTransitionAccess().getActionActionIDTerminalRuleCall_9_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getActionActionIDTerminalRuleCall_9_1_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getActionActionCrossReference_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__GuardAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardGuardCrossReference_10_1_0()); }
(
{ before(grammarAccess.getTransitionAccess().getGuardGuardIDTerminalRuleCall_10_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getGuardGuardIDTerminalRuleCall_10_1_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getGuardGuardCrossReference_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__GuardAssignment_10_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGuardGuardCrossReference_10_2_1_0()); }
(
{ before(grammarAccess.getTransitionAccess().getGuardGuardIDTerminalRuleCall_10_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getGuardGuardIDTerminalRuleCall_10_2_1_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getGuardGuardCrossReference_10_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TriggerAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerTriggerCrossReference_11_1_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTriggerTriggerIDTerminalRuleCall_11_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getTriggerTriggerIDTerminalRuleCall_11_1_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTriggerTriggerCrossReference_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


